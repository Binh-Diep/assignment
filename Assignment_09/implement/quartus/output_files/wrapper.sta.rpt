TimeQuest Timing Analyzer report for wrapper
Sun Mar 05 13:16:33 2023
Quartus II 64-Bit Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. TimeQuest Timing Analyzer Summary
  3. Parallel Compilation
  4. Clocks
  5. Slow Model Fmax Summary
  6. Slow Model Setup Summary
  7. Slow Model Hold Summary
  8. Slow Model Recovery Summary
  9. Slow Model Removal Summary
 10. Slow Model Minimum Pulse Width Summary
 11. Slow Model Setup: 'CLOCK_50'
 12. Slow Model Hold: 'CLOCK_50'
 13. Slow Model Minimum Pulse Width: 'CLOCK_50'
 14. Setup Times
 15. Hold Times
 16. Clock to Output Times
 17. Minimum Clock to Output Times
 18. Fast Model Setup Summary
 19. Fast Model Hold Summary
 20. Fast Model Recovery Summary
 21. Fast Model Removal Summary
 22. Fast Model Minimum Pulse Width Summary
 23. Fast Model Setup: 'CLOCK_50'
 24. Fast Model Hold: 'CLOCK_50'
 25. Fast Model Minimum Pulse Width: 'CLOCK_50'
 26. Setup Times
 27. Hold Times
 28. Clock to Output Times
 29. Minimum Clock to Output Times
 30. Multicorner Timing Analysis Summary
 31. Setup Times
 32. Hold Times
 33. Clock to Output Times
 34. Minimum Clock to Output Times
 35. Setup Transfers
 36. Hold Transfers
 37. Report TCCS
 38. Report RSKM
 39. Unconstrained Paths
 40. TimeQuest Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+----------------------------------------------------------------------------------------+
; TimeQuest Timing Analyzer Summary                                                      ;
+--------------------+-------------------------------------------------------------------+
; Quartus II Version ; Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition ;
; Revision Name      ; wrapper                                                           ;
; Device Family      ; Cyclone II                                                        ;
; Device Name        ; EP2C35F672C6                                                      ;
; Timing Models      ; Final                                                             ;
; Delay Model        ; Combined                                                          ;
; Rise/Fall Delays   ; Unavailable                                                       ;
+--------------------+-------------------------------------------------------------------+


Parallel compilation was disabled, but you have multiple processors available. Enable parallel compilation to reduce compilation time.
+-------------------------------------+
; Parallel Compilation                ;
+----------------------------+--------+
; Processors                 ; Number ;
+----------------------------+--------+
; Number detected on machine ; 8      ;
; Maximum allowed            ; 1      ;
+----------------------------+--------+


+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clocks                                                                                                                                                                               ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+--------------+
; Clock Name ; Type ; Period ; Frequency  ; Rise  ; Fall  ; Duty Cycle ; Divide by ; Multiply by ; Phase ; Offset ; Edge List ; Edge Shift ; Inverted ; Master ; Source ; Targets      ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+--------------+
; CLOCK_50   ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { CLOCK_50 } ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+--------------+


+--------------------------------------------------+
; Slow Model Fmax Summary                          ;
+------------+-----------------+------------+------+
; Fmax       ; Restricted Fmax ; Clock Name ; Note ;
+------------+-----------------+------------+------+
; 261.16 MHz ; 261.16 MHz      ; CLOCK_50   ;      ;
+------------+-----------------+------------+------+
This panel reports FMAX for every clock in the design, regardless of the user-specified clock periods.  FMAX is only computed for paths where the source and destination registers or ports are driven by the same clock.  Paths of different clocks, including generated clocks, are ignored.  For paths between a clock and its inversion, FMAX is computed as if the rising and falling edges are scaled along with FMAX, such that the duty cycle (in terms of a percentage) is maintained. Altera recommends that you always use clock constraints and other slack reports for sign-off analysis.


+-----------------------------------+
; Slow Model Setup Summary          ;
+----------+--------+---------------+
; Clock    ; Slack  ; End Point TNS ;
+----------+--------+---------------+
; CLOCK_50 ; -2.829 ; -91.637       ;
+----------+--------+---------------+


+----------------------------------+
; Slow Model Hold Summary          ;
+----------+-------+---------------+
; Clock    ; Slack ; End Point TNS ;
+----------+-------+---------------+
; CLOCK_50 ; 0.391 ; 0.000         ;
+----------+-------+---------------+


-------------------------------
; Slow Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Slow Model Removal Summary ;
------------------------------
No paths to report.


+----------------------------------------+
; Slow Model Minimum Pulse Width Summary ;
+----------+--------+--------------------+
; Clock    ; Slack  ; End Point TNS      ;
+----------+--------+--------------------+
; CLOCK_50 ; -1.380 ; -68.380            ;
+----------+--------+--------------------+


+----------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'CLOCK_50'                                                                                                                 ;
+--------+-------------------------------------+-------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                           ; To Node                 ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------------------+-------------------------+--------------+-------------+--------------+------------+------------+
; -2.829 ; multiplier:dut|A_tmp[1]             ; multiplier:dut|A_tmp[7] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.006     ; 3.859      ;
; -2.801 ; multiplier:dut|A_tmp[2]             ; multiplier:dut|A_tmp[7] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.006     ; 3.831      ;
; -2.724 ; multiplier:dut|A_tmp[2]             ; multiplier:dut|A_tmp[5] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.006     ; 3.754      ;
; -2.692 ; multiplier:dut|A_tmp[1]             ; multiplier:dut|A_tmp[1] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.728      ;
; -2.675 ; multiplier:dut|A_tmp[3]             ; multiplier:dut|A_tmp[7] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.006     ; 3.705      ;
; -2.674 ; multiplier:dut|A_tmp[1]             ; multiplier:dut|A_tmp[4] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.710      ;
; -2.655 ; multiplier:dut|A_tmp[2]             ; multiplier:dut|A_tmp[6] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.006     ; 3.685      ;
; -2.646 ; multiplier:dut|A_tmp[2]             ; multiplier:dut|A_tmp[4] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.682      ;
; -2.642 ; multiplier:dut|A_tmp[4]             ; multiplier:dut|A_tmp[7] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.006     ; 3.672      ;
; -2.637 ; multiplier:dut|M_tmp[0]             ; multiplier:dut|A_tmp[7] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.002     ; 3.671      ;
; -2.628 ; multiplier:dut|A_tmp[1]             ; multiplier:dut|A_tmp[3] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.664      ;
; -2.600 ; multiplier:dut|A_tmp[2]             ; multiplier:dut|A_tmp[3] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.636      ;
; -2.584 ; multiplier:dut|A_tmp[1]             ; multiplier:dut|A_tmp[5] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.006     ; 3.614      ;
; -2.575 ; multiplier:dut|REG[1]               ; multiplier:dut|A_tmp[5] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.002     ; 3.609      ;
; -2.568 ; multiplier:dut|M_tmp[4]             ; multiplier:dut|A_tmp[7] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.002     ; 3.602      ;
; -2.567 ; multiplier:dut|REG[1]               ; multiplier:dut|A_tmp[7] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.002     ; 3.601      ;
; -2.567 ; multiplier:dut|M_tmp[0]             ; multiplier:dut|A_tmp[4] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 3.607      ;
; -2.553 ; multiplier:dut|M_tmp[0]             ; multiplier:dut|A_tmp[5] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.002     ; 3.587      ;
; -2.545 ; multiplier:dut|A_tmp[1]             ; multiplier:dut|A_tmp[2] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.581      ;
; -2.543 ; multiplier:dut|REG[1]               ; multiplier:dut|A_tmp[3] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 3.583      ;
; -2.527 ; multiplier:dut|M_tmp[1]             ; multiplier:dut|A_tmp[4] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 3.567      ;
; -2.526 ; multiplier:dut|M_tmp[1]             ; multiplier:dut|A_tmp[7] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.002     ; 3.560      ;
; -2.520 ; multiplier:dut|A_tmp[3]             ; multiplier:dut|A_tmp[4] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.556      ;
; -2.515 ; multiplier:dut|A_tmp[1]             ; multiplier:dut|A_tmp[6] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.006     ; 3.545      ;
; -2.496 ; multiplier:dut|M_tmp[0]             ; multiplier:dut|A_tmp[1] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 3.536      ;
; -2.495 ; multiplier:dut|M_tmp[2]             ; multiplier:dut|A_tmp[7] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.002     ; 3.529      ;
; -2.492 ; multiplier:dut|M_tmp[0]             ; multiplier:dut|A_tmp[6] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.002     ; 3.526      ;
; -2.490 ; multiplier:dut|M_tmp[0]             ; multiplier:dut|A_tmp[3] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 3.530      ;
; -2.468 ; multiplier:dut|M_tmp[5]             ; multiplier:dut|A_tmp[7] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.002     ; 3.502      ;
; -2.460 ; multiplier:dut|M_tmp[1]             ; multiplier:dut|A_tmp[6] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.002     ; 3.494      ;
; -2.458 ; multiplier:dut|M_tmp[1]             ; multiplier:dut|A_tmp[3] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 3.498      ;
; -2.456 ; multiplier:dut|M_tmp[2]             ; multiplier:dut|A_tmp[4] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 3.496      ;
; -2.431 ; multiplier:dut|REG[1]               ; multiplier:dut|A_tmp[6] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.002     ; 3.465      ;
; -2.423 ; multiplier:dut|M_tmp[0]             ; multiplier:dut|A_tmp[2] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 3.463      ;
; -2.414 ; multiplier:dut|A_tmp[3]             ; multiplier:dut|A_tmp[5] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.006     ; 3.444      ;
; -2.384 ; multiplier:dut|M_tmp[3]             ; multiplier:dut|A_tmp[4] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 3.424      ;
; -2.383 ; multiplier:dut|M_tmp[1]             ; multiplier:dut|A_tmp[2] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 3.423      ;
; -2.382 ; multiplier:dut|M_tmp[2]             ; multiplier:dut|A_tmp[6] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.002     ; 3.416      ;
; -2.381 ; multiplier:dut|current_state.UPLOAD ; multiplier:dut|A_tmp[5] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.001      ; 3.418      ;
; -2.381 ; multiplier:dut|current_state.UPLOAD ; multiplier:dut|A_tmp[6] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.001      ; 3.418      ;
; -2.381 ; multiplier:dut|current_state.UPLOAD ; multiplier:dut|A_tmp[7] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.001      ; 3.418      ;
; -2.380 ; multiplier:dut|A_tmp[4]             ; multiplier:dut|A_tmp[5] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.006     ; 3.410      ;
; -2.380 ; multiplier:dut|M_tmp[2]             ; multiplier:dut|A_tmp[3] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 3.420      ;
; -2.375 ; multiplier:dut|REG[2]               ; multiplier:dut|A_tmp[2] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 3.415      ;
; -2.353 ; multiplier:dut|M_tmp[1]             ; multiplier:dut|A_tmp[5] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.002     ; 3.387      ;
; -2.345 ; multiplier:dut|A_tmp[3]             ; multiplier:dut|A_tmp[6] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.006     ; 3.375      ;
; -2.343 ; multiplier:dut|M_tmp[3]             ; multiplier:dut|A_tmp[7] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.002     ; 3.377      ;
; -2.342 ; multiplier:dut|A_tmp[0]             ; multiplier:dut|A_tmp[4] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.007      ; 3.385      ;
; -2.339 ; multiplier:dut|A_tmp[5]             ; multiplier:dut|A_tmp[7] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.375      ;
; -2.330 ; multiplier:dut|REG[2]               ; multiplier:dut|A_tmp[5] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.002     ; 3.364      ;
; -2.322 ; multiplier:dut|REG[2]               ; multiplier:dut|A_tmp[7] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.002     ; 3.356      ;
; -2.314 ; multiplier:dut|M_tmp[3]             ; multiplier:dut|A_tmp[6] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.002     ; 3.348      ;
; -2.311 ; multiplier:dut|A_tmp[4]             ; multiplier:dut|A_tmp[6] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.006     ; 3.341      ;
; -2.306 ; multiplier:dut|REG[1]               ; multiplier:dut|A_tmp[1] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 3.346      ;
; -2.300 ; multiplier:dut|A_tmp[0]             ; multiplier:dut|A_tmp[7] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.001      ; 3.337      ;
; -2.298 ; multiplier:dut|REG[2]               ; multiplier:dut|A_tmp[3] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 3.338      ;
; -2.282 ; multiplier:dut|M_tmp[2]             ; multiplier:dut|A_tmp[5] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.002     ; 3.316      ;
; -2.277 ; multiplier:dut|current_state.LOAD   ; multiplier:dut|REG[14]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 3.317      ;
; -2.277 ; multiplier:dut|current_state.LOAD   ; multiplier:dut|REG[12]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 3.317      ;
; -2.277 ; multiplier:dut|current_state.LOAD   ; multiplier:dut|REG[15]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 3.317      ;
; -2.277 ; multiplier:dut|current_state.LOAD   ; multiplier:dut|REG[13]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 3.317      ;
; -2.277 ; multiplier:dut|current_state.LOAD   ; multiplier:dut|REG[11]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 3.317      ;
; -2.269 ; multiplier:dut|A_tmp[0]             ; multiplier:dut|A_tmp[6] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.001      ; 3.306      ;
; -2.269 ; multiplier:dut|count[0]             ; multiplier:dut|REG[14]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 3.309      ;
; -2.269 ; multiplier:dut|count[0]             ; multiplier:dut|REG[12]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 3.309      ;
; -2.269 ; multiplier:dut|count[0]             ; multiplier:dut|REG[15]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 3.309      ;
; -2.269 ; multiplier:dut|count[0]             ; multiplier:dut|REG[13]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 3.309      ;
; -2.269 ; multiplier:dut|count[0]             ; multiplier:dut|REG[11]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 3.309      ;
; -2.267 ; multiplier:dut|A_tmp[0]             ; multiplier:dut|A_tmp[3] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.007      ; 3.310      ;
; -2.257 ; multiplier:dut|A_tmp[5]             ; multiplier:dut|A_tmp[6] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.293      ;
; -2.253 ; multiplier:dut|REG[0]               ; multiplier:dut|A_tmp[5] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.006     ; 3.283      ;
; -2.253 ; multiplier:dut|M_tmp[4]             ; multiplier:dut|A_tmp[6] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.002     ; 3.287      ;
; -2.245 ; multiplier:dut|REG[0]               ; multiplier:dut|A_tmp[7] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.006     ; 3.275      ;
; -2.242 ; multiplier:dut|REG[2]               ; multiplier:dut|A_tmp[4] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 3.282      ;
; -2.231 ; multiplier:dut|current_state.LOAD   ; multiplier:dut|REG[10]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.002      ; 3.269      ;
; -2.231 ; multiplier:dut|current_state.LOAD   ; multiplier:dut|REG[8]   ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.002      ; 3.269      ;
; -2.223 ; multiplier:dut|count[0]             ; multiplier:dut|REG[10]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.002      ; 3.261      ;
; -2.223 ; multiplier:dut|count[0]             ; multiplier:dut|REG[8]   ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.002      ; 3.261      ;
; -2.221 ; multiplier:dut|REG[0]               ; multiplier:dut|A_tmp[3] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.257      ;
; -2.210 ; multiplier:dut|M_tmp[3]             ; multiplier:dut|A_tmp[5] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.002     ; 3.244      ;
; -2.201 ; multiplier:dut|A_tmp[7]             ; multiplier:dut|A_tmp[7] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.237      ;
; -2.200 ; multiplier:dut|A_tmp[2]             ; multiplier:dut|A_tmp[2] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.236      ;
; -2.198 ; multiplier:dut|A_tmp[0]             ; multiplier:dut|A_tmp[2] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.007      ; 3.241      ;
; -2.186 ; multiplier:dut|REG[2]               ; multiplier:dut|A_tmp[6] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.002     ; 3.220      ;
; -2.182 ; multiplier:dut|M_tmp[5]             ; multiplier:dut|A_tmp[6] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.002     ; 3.216      ;
; -2.170 ; multiplier:dut|A_tmp[4]             ; multiplier:dut|A_tmp[4] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.206      ;
; -2.168 ; multiplier:dut|A_tmp[0]             ; multiplier:dut|A_tmp[5] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.001      ; 3.205      ;
; -2.162 ; multiplier:dut|A_tmp[3]             ; multiplier:dut|A_tmp[3] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.198      ;
; -2.161 ; multiplier:dut|A_tmp[6]             ; multiplier:dut|A_tmp[7] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 3.197      ;
; -2.148 ; multiplier:dut|M_tmp[4]             ; multiplier:dut|A_tmp[5] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.002     ; 3.182      ;
; -2.138 ; multiplier:dut|M_tmp[6]             ; multiplier:dut|A_tmp[7] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.002     ; 3.172      ;
; -2.131 ; multiplier:dut|M_tmp[0]             ; multiplier:dut|A_tmp[0] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 3.164      ;
; -2.112 ; multiplier:dut|count[2]             ; multiplier:dut|REG[14]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 3.152      ;
; -2.112 ; multiplier:dut|count[2]             ; multiplier:dut|REG[12]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 3.152      ;
; -2.112 ; multiplier:dut|count[2]             ; multiplier:dut|REG[15]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 3.152      ;
; -2.112 ; multiplier:dut|count[2]             ; multiplier:dut|REG[13]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 3.152      ;
; -2.112 ; multiplier:dut|count[2]             ; multiplier:dut|REG[11]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 3.152      ;
; -2.109 ; multiplier:dut|REG[0]               ; multiplier:dut|A_tmp[6] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.006     ; 3.139      ;
; -2.087 ; multiplier:dut|A_tmp[0]             ; multiplier:dut|A_tmp[1] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.007      ; 3.130      ;
; -2.074 ; multiplier:dut|REG[1]               ; multiplier:dut|A_tmp[2] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 3.114      ;
+--------+-------------------------------------+-------------------------+--------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'CLOCK_50'                                                                                                                                 ;
+-------+---------------------------------------+---------------------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node                             ; To Node                               ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+---------------------------------------+---------------------------------------+--------------+-------------+--------------+------------+------------+
; 0.391 ; multiplier:dut|count[0]               ; multiplier:dut|count[0]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; multiplier:dut|count[1]               ; multiplier:dut|count[1]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; multiplier:dut|count[2]               ; multiplier:dut|count[2]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; multiplier:dut|REG[0]                 ; multiplier:dut|REG[0]                 ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; multiplier:dut|REG[16]                ; multiplier:dut|REG[16]                ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.657      ;
; 0.391 ; multiplier:dut|current_state.SEND     ; multiplier:dut|current_state.SEND     ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.657      ;
; 0.523 ; multiplier:dut|REG[10]                ; multiplier:dut|REG[8]                 ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.789      ;
; 0.529 ; multiplier:dut|REG[13]                ; multiplier:dut|result_o[12]           ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.795      ;
; 0.530 ; multiplier:dut|REG[14]                ; multiplier:dut|REG[12]                ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.796      ;
; 0.530 ; multiplier:dut|REG[14]                ; multiplier:dut|result_o[13]           ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.796      ;
; 0.531 ; multiplier:dut|REG[13]                ; multiplier:dut|REG[11]                ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.797      ;
; 0.532 ; multiplier:dut|REG[11]                ; multiplier:dut|result_o[10]           ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.798      ;
; 0.536 ; multiplier:dut|REG[15]                ; multiplier:dut|REG[13]                ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.802      ;
; 0.536 ; multiplier:dut|REG[15]                ; multiplier:dut|result_o[14]           ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.802      ;
; 0.547 ; multiplier:dut|count[1]               ; multiplier:dut|current_state.SHIFT    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.813      ;
; 0.649 ; multiplier:dut|current_state.PRE_BOOT ; multiplier:dut|current_state.LOAD     ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.915      ;
; 0.655 ; multiplier:dut|Q_tmp[3]               ; multiplier:dut|REG[4]                 ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.921      ;
; 0.660 ; multiplier:dut|REG[8]                 ; multiplier:dut|result_o[7]            ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.002      ; 0.928      ;
; 0.672 ; multiplier:dut|REG[12]                ; multiplier:dut|result_o[11]           ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.938      ;
; 0.673 ; multiplier:dut|count[2]               ; multiplier:dut|current_state.SHIFT    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.939      ;
; 0.781 ; multiplier:dut|current_state.SHIFT    ; multiplier:dut|REG[9]                 ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.047      ;
; 0.798 ; multiplier:dut|Q_tmp[2]               ; multiplier:dut|REG[3]                 ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.064      ;
; 0.802 ; multiplier:dut|REG[6]                 ; multiplier:dut|REG[4]                 ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.068      ;
; 0.803 ; multiplier:dut|Q_tmp[4]               ; multiplier:dut|REG[5]                 ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.069      ;
; 0.808 ; multiplier:dut|current_state.CALC     ; multiplier:dut|A_tmp[2]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.074      ;
; 0.808 ; multiplier:dut|current_state.CALC     ; multiplier:dut|A_tmp[1]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.074      ;
; 0.809 ; multiplier:dut|current_state.CALC     ; multiplier:dut|A_tmp[4]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.075      ;
; 0.812 ; multiplier:dut|current_state.CALC     ; multiplier:dut|A_tmp[3]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.078      ;
; 0.816 ; multiplier:dut|REG[8]                 ; multiplier:dut|REG[6]                 ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.082      ;
; 0.820 ; multiplier:dut|REG[8]                 ; multiplier:dut|Q_tmp[7]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.086      ;
; 0.828 ; multiplier:dut|count[0]               ; multiplier:dut|count[1]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.094      ;
; 0.830 ; multiplier:dut|count[0]               ; multiplier:dut|current_state.SHIFT    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.096      ;
; 0.837 ; multiplier:dut|Q_tmp[6]               ; multiplier:dut|REG[7]                 ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.103      ;
; 0.838 ; multiplier:dut|current_state.LOAD     ; multiplier:dut|current_state.SHIFT    ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.104      ;
; 0.841 ; multiplier:dut|Q_tmp[5]               ; multiplier:dut|REG[6]                 ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.107      ;
; 0.846 ; multiplier:dut|REG[7]                 ; multiplier:dut|Q_tmp[6]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.112      ;
; 0.846 ; multiplier:dut|REG[7]                 ; multiplier:dut|REG[5]                 ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.112      ;
; 0.848 ; multiplier:dut|REG[3]                 ; multiplier:dut|Q_tmp[2]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.114      ;
; 0.848 ; multiplier:dut|REG[5]                 ; multiplier:dut|REG[3]                 ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.114      ;
; 0.852 ; multiplier:dut|REG[5]                 ; multiplier:dut|Q_tmp[4]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.118      ;
; 0.872 ; multiplier:dut|current_state.SHIFT    ; multiplier:dut|current_state.UPLOAD   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.138      ;
; 0.928 ; multiplier:dut|current_state.UPLOAD   ; multiplier:dut|A_tmp[0]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.194      ;
; 0.939 ; multiplier:dut|REG[7]                 ; multiplier:dut|result_o[6]            ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.007      ; 1.212      ;
; 0.951 ; multiplier:dut|REG[3]                 ; multiplier:dut|result_o[2]            ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.007      ; 1.224      ;
; 0.958 ; multiplier:dut|REG[4]                 ; multiplier:dut|result_o[3]            ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.007      ; 1.231      ;
; 0.964 ; multiplier:dut|REG[16]                ; multiplier:dut|REG[14]                ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.004      ; 1.234      ;
; 0.964 ; multiplier:dut|REG[16]                ; multiplier:dut|REG[15]                ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.004      ; 1.234      ;
; 0.968 ; multiplier:dut|REG[16]                ; multiplier:dut|result_o[15]           ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.004      ; 1.238      ;
; 0.977 ; multiplier:dut|REG[6]                 ; multiplier:dut|result_o[5]            ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.007      ; 1.250      ;
; 0.988 ; multiplier:dut|REG[14]                ; multiplier:dut|A_tmp[5]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; -0.003     ; 1.251      ;
; 0.995 ; multiplier:dut|current_state.PRE_BOOT ; multiplier:dut|M_tmp[5]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.003      ; 1.264      ;
; 0.996 ; multiplier:dut|current_state.PRE_BOOT ; multiplier:dut|M_tmp[3]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.003      ; 1.265      ;
; 0.996 ; multiplier:dut|current_state.PRE_BOOT ; multiplier:dut|M_tmp[4]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.003      ; 1.265      ;
; 1.029 ; multiplier:dut|current_state.SHIFT    ; multiplier:dut|REG[6]                 ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.002      ; 1.297      ;
; 1.031 ; multiplier:dut|A_tmp[7]               ; multiplier:dut|REG[16]                ; CLOCK_50     ; CLOCK_50    ; 0.000        ; -0.001     ; 1.296      ;
; 1.031 ; multiplier:dut|current_state.SHIFT    ; multiplier:dut|REG[7]                 ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.002      ; 1.299      ;
; 1.032 ; multiplier:dut|current_state.SHIFT    ; multiplier:dut|REG[4]                 ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.002      ; 1.300      ;
; 1.032 ; multiplier:dut|current_state.SHIFT    ; multiplier:dut|REG[5]                 ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.002      ; 1.300      ;
; 1.033 ; multiplier:dut|current_state.SHIFT    ; multiplier:dut|REG[3]                 ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.002      ; 1.301      ;
; 1.050 ; multiplier:dut|REG[4]                 ; multiplier:dut|Q_tmp[3]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.316      ;
; 1.066 ; multiplier:dut|REG[10]                ; multiplier:dut|result_o[9]            ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.007      ; 1.339      ;
; 1.074 ; multiplier:dut|Q_tmp[7]               ; multiplier:dut|REG[8]                 ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.340      ;
; 1.079 ; multiplier:dut|REG[5]                 ; multiplier:dut|result_o[4]            ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.007      ; 1.352      ;
; 1.082 ; multiplier:dut|current_state.UPLOAD   ; multiplier:dut|Q_tmp[2]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.002      ; 1.350      ;
; 1.084 ; multiplier:dut|current_state.UPLOAD   ; multiplier:dut|Q_tmp[5]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.002      ; 1.352      ;
; 1.094 ; multiplier:dut|A_tmp[6]               ; multiplier:dut|REG[15]                ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.003      ; 1.363      ;
; 1.097 ; multiplier:dut|current_state.UPLOAD   ; multiplier:dut|Q_tmp[4]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.002      ; 1.365      ;
; 1.107 ; multiplier:dut|REG[6]                 ; multiplier:dut|Q_tmp[5]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.373      ;
; 1.113 ; multiplier:dut|current_state.SEND     ; multiplier:dut|result_o[7]            ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.002      ; 1.381      ;
; 1.113 ; multiplier:dut|current_state.SEND     ; multiplier:dut|result_o[10]           ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.002      ; 1.381      ;
; 1.113 ; multiplier:dut|current_state.SEND     ; multiplier:dut|result_o[11]           ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.002      ; 1.381      ;
; 1.113 ; multiplier:dut|current_state.SEND     ; multiplier:dut|result_o[12]           ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.002      ; 1.381      ;
; 1.113 ; multiplier:dut|current_state.SEND     ; multiplier:dut|result_o[13]           ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.002      ; 1.381      ;
; 1.113 ; multiplier:dut|current_state.SEND     ; multiplier:dut|result_o[14]           ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.002      ; 1.381      ;
; 1.113 ; multiplier:dut|current_state.SEND     ; multiplier:dut|result_o[15]           ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.002      ; 1.381      ;
; 1.117 ; multiplier:dut|A_tmp[5]               ; multiplier:dut|REG[14]                ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.003      ; 1.386      ;
; 1.132 ; multiplier:dut|current_state.UPLOAD   ; multiplier:dut|A_tmp[7]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.001      ; 1.399      ;
; 1.132 ; multiplier:dut|current_state.UPLOAD   ; multiplier:dut|A_tmp[5]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.001      ; 1.399      ;
; 1.135 ; multiplier:dut|current_state.UPLOAD   ; multiplier:dut|A_tmp[6]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.001      ; 1.402      ;
; 1.150 ; multiplier:dut|A_tmp[0]               ; multiplier:dut|REG[9]                 ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.416      ;
; 1.197 ; multiplier:dut|count[1]               ; multiplier:dut|REG[16]                ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 1.463      ;
; 1.199 ; multiplier:dut|REG[1]                 ; multiplier:dut|result_o[0]            ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.006      ; 1.471      ;
; 1.201 ; multiplier:dut|current_state.PRE_BOOT ; multiplier:dut|Q_tmp[7]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.002      ; 1.469      ;
; 1.206 ; multiplier:dut|current_state.PRE_BOOT ; multiplier:dut|Q_tmp[1]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.002      ; 1.474      ;
; 1.206 ; multiplier:dut|current_state.PRE_BOOT ; multiplier:dut|Q_tmp[3]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.002      ; 1.474      ;
; 1.207 ; multiplier:dut|current_state.PRE_BOOT ; multiplier:dut|Q_tmp[6]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.002      ; 1.475      ;
; 1.211 ; multiplier:dut|REG[2]                 ; multiplier:dut|result_o[1]            ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.006      ; 1.483      ;
; 1.238 ; multiplier:dut|REG[1]                 ; multiplier:dut|Q_tmp[0]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; -0.001     ; 1.503      ;
; 1.243 ; multiplier:dut|current_state.PRE_BOOT ; multiplier:dut|M_tmp[1]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.003      ; 1.512      ;
; 1.253 ; multiplier:dut|REG[16]                ; multiplier:dut|A_tmp[7]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.001      ; 1.520      ;
; 1.257 ; multiplier:dut|current_state.SHIFT    ; multiplier:dut|REG[8]                 ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.002      ; 1.525      ;
; 1.264 ; multiplier:dut|REG[15]                ; multiplier:dut|A_tmp[6]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; -0.003     ; 1.527      ;
; 1.269 ; multiplier:dut|REG[2]                 ; multiplier:dut|REG[0]                 ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.004      ; 1.539      ;
; 1.279 ; multiplier:dut|current_state.INIT     ; multiplier:dut|count[1]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; -0.007     ; 1.538      ;
; 1.280 ; multiplier:dut|current_state.INIT     ; multiplier:dut|current_state.PRE_BOOT ; CLOCK_50     ; CLOCK_50    ; 0.000        ; -0.007     ; 1.539      ;
; 1.281 ; multiplier:dut|current_state.INIT     ; multiplier:dut|count[2]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; -0.007     ; 1.540      ;
; 1.283 ; multiplier:dut|current_state.INIT     ; multiplier:dut|count[0]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; -0.007     ; 1.542      ;
; 1.288 ; multiplier:dut|current_state.PRE_BOOT ; multiplier:dut|Q_tmp[0]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.002      ; 1.556      ;
; 1.293 ; multiplier:dut|current_state.CALC     ; multiplier:dut|current_state.LOAD     ; CLOCK_50     ; CLOCK_50    ; 0.000        ; -0.007     ; 1.552      ;
; 1.323 ; multiplier:dut|A_tmp[2]               ; multiplier:dut|REG[11]                ; CLOCK_50     ; CLOCK_50    ; 0.000        ; -0.003     ; 1.586      ;
+-------+---------------------------------------+---------------------------------------+--------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'CLOCK_50'                                                                                ;
+--------+--------------+----------------+------------------+----------+------------+---------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock    ; Clock Edge ; Target                                ;
+--------+--------------+----------------+------------------+----------+------------+---------------------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; CLOCK_50 ; Rise       ; CLOCK_50                              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|A_tmp[0]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|A_tmp[0]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|A_tmp[1]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|A_tmp[1]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|A_tmp[2]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|A_tmp[2]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|A_tmp[3]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|A_tmp[3]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|A_tmp[4]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|A_tmp[4]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|A_tmp[5]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|A_tmp[5]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|A_tmp[6]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|A_tmp[6]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|A_tmp[7]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|A_tmp[7]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|M_tmp[0]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|M_tmp[0]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|M_tmp[1]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|M_tmp[1]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|M_tmp[2]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|M_tmp[2]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|M_tmp[3]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|M_tmp[3]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|M_tmp[4]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|M_tmp[4]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|M_tmp[5]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|M_tmp[5]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|M_tmp[6]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|M_tmp[6]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|M_tmp[7]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|M_tmp[7]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|Q_tmp[0]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|Q_tmp[0]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|Q_tmp[1]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|Q_tmp[1]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|Q_tmp[2]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|Q_tmp[2]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|Q_tmp[3]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|Q_tmp[3]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|Q_tmp[4]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|Q_tmp[4]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|Q_tmp[5]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|Q_tmp[5]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|Q_tmp[6]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|Q_tmp[6]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|Q_tmp[7]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|Q_tmp[7]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|REG[0]                 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|REG[0]                 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|REG[10]                ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|REG[10]                ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|REG[11]                ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|REG[11]                ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|REG[12]                ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|REG[12]                ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|REG[13]                ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|REG[13]                ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|REG[14]                ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|REG[14]                ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|REG[15]                ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|REG[15]                ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|REG[16]                ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|REG[16]                ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|REG[1]                 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|REG[1]                 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|REG[2]                 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|REG[2]                 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|REG[3]                 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|REG[3]                 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|REG[4]                 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|REG[4]                 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|REG[5]                 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|REG[5]                 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|REG[6]                 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|REG[6]                 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|REG[7]                 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|REG[7]                 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|REG[8]                 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|REG[8]                 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|REG[9]                 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|REG[9]                 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|count[0]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|count[0]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|count[1]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|count[1]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|count[2]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|count[2]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|current_state.CALC     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|current_state.CALC     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|current_state.INIT     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|current_state.INIT     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|current_state.LOAD     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|current_state.LOAD     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|current_state.PRE_BOOT ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|current_state.PRE_BOOT ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|current_state.SEND     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|current_state.SEND     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|current_state.SHIFT    ;
+--------+--------------+----------------+------------------+----------+------------+---------------------------------------+


+-------------------------------------------------------------------------+
; Setup Times                                                             ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; SW[*]     ; CLOCK_50   ; 4.874  ; 4.874  ; Rise       ; CLOCK_50        ;
;  SW[0]    ; CLOCK_50   ; 1.416  ; 1.416  ; Rise       ; CLOCK_50        ;
;  SW[1]    ; CLOCK_50   ; 0.493  ; 0.493  ; Rise       ; CLOCK_50        ;
;  SW[2]    ; CLOCK_50   ; 1.616  ; 1.616  ; Rise       ; CLOCK_50        ;
;  SW[3]    ; CLOCK_50   ; -0.368 ; -0.368 ; Rise       ; CLOCK_50        ;
;  SW[4]    ; CLOCK_50   ; -0.398 ; -0.398 ; Rise       ; CLOCK_50        ;
;  SW[5]    ; CLOCK_50   ; -0.491 ; -0.491 ; Rise       ; CLOCK_50        ;
;  SW[6]    ; CLOCK_50   ; 0.535  ; 0.535  ; Rise       ; CLOCK_50        ;
;  SW[7]    ; CLOCK_50   ; 2.297  ; 2.297  ; Rise       ; CLOCK_50        ;
;  SW[8]    ; CLOCK_50   ; 1.087  ; 1.087  ; Rise       ; CLOCK_50        ;
;  SW[9]    ; CLOCK_50   ; 1.149  ; 1.149  ; Rise       ; CLOCK_50        ;
;  SW[10]   ; CLOCK_50   ; 0.560  ; 0.560  ; Rise       ; CLOCK_50        ;
;  SW[11]   ; CLOCK_50   ; 0.562  ; 0.562  ; Rise       ; CLOCK_50        ;
;  SW[12]   ; CLOCK_50   ; 0.582  ; 0.582  ; Rise       ; CLOCK_50        ;
;  SW[13]   ; CLOCK_50   ; 4.874  ; 4.874  ; Rise       ; CLOCK_50        ;
;  SW[14]   ; CLOCK_50   ; 4.642  ; 4.642  ; Rise       ; CLOCK_50        ;
;  SW[15]   ; CLOCK_50   ; 4.744  ; 4.744  ; Rise       ; CLOCK_50        ;
+-----------+------------+--------+--------+------------+-----------------+


+-------------------------------------------------------------------------+
; Hold Times                                                              ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; SW[*]     ; CLOCK_50   ; 0.721  ; 0.721  ; Rise       ; CLOCK_50        ;
;  SW[0]    ; CLOCK_50   ; -1.186 ; -1.186 ; Rise       ; CLOCK_50        ;
;  SW[1]    ; CLOCK_50   ; -0.263 ; -0.263 ; Rise       ; CLOCK_50        ;
;  SW[2]    ; CLOCK_50   ; -1.386 ; -1.386 ; Rise       ; CLOCK_50        ;
;  SW[3]    ; CLOCK_50   ; 0.598  ; 0.598  ; Rise       ; CLOCK_50        ;
;  SW[4]    ; CLOCK_50   ; 0.628  ; 0.628  ; Rise       ; CLOCK_50        ;
;  SW[5]    ; CLOCK_50   ; 0.721  ; 0.721  ; Rise       ; CLOCK_50        ;
;  SW[6]    ; CLOCK_50   ; -0.305 ; -0.305 ; Rise       ; CLOCK_50        ;
;  SW[7]    ; CLOCK_50   ; -2.067 ; -2.067 ; Rise       ; CLOCK_50        ;
;  SW[8]    ; CLOCK_50   ; -0.857 ; -0.857 ; Rise       ; CLOCK_50        ;
;  SW[9]    ; CLOCK_50   ; -0.919 ; -0.919 ; Rise       ; CLOCK_50        ;
;  SW[10]   ; CLOCK_50   ; -0.330 ; -0.330 ; Rise       ; CLOCK_50        ;
;  SW[11]   ; CLOCK_50   ; -0.332 ; -0.332 ; Rise       ; CLOCK_50        ;
;  SW[12]   ; CLOCK_50   ; -0.352 ; -0.352 ; Rise       ; CLOCK_50        ;
;  SW[13]   ; CLOCK_50   ; -4.644 ; -4.644 ; Rise       ; CLOCK_50        ;
;  SW[14]   ; CLOCK_50   ; -4.412 ; -4.412 ; Rise       ; CLOCK_50        ;
;  SW[15]   ; CLOCK_50   ; -4.514 ; -4.514 ; Rise       ; CLOCK_50        ;
+-----------+------------+--------+--------+------------+-----------------+


+-----------------------------------------------------------------------+
; Clock to Output Times                                                 ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; LEDR[*]   ; CLOCK_50   ; 8.070 ; 8.070 ; Rise       ; CLOCK_50        ;
;  LEDR[0]  ; CLOCK_50   ; 8.070 ; 8.070 ; Rise       ; CLOCK_50        ;
;  LEDR[1]  ; CLOCK_50   ; 8.004 ; 8.004 ; Rise       ; CLOCK_50        ;
;  LEDR[2]  ; CLOCK_50   ; 7.978 ; 7.978 ; Rise       ; CLOCK_50        ;
;  LEDR[3]  ; CLOCK_50   ; 7.990 ; 7.990 ; Rise       ; CLOCK_50        ;
;  LEDR[4]  ; CLOCK_50   ; 7.945 ; 7.945 ; Rise       ; CLOCK_50        ;
;  LEDR[5]  ; CLOCK_50   ; 7.513 ; 7.513 ; Rise       ; CLOCK_50        ;
;  LEDR[6]  ; CLOCK_50   ; 7.779 ; 7.779 ; Rise       ; CLOCK_50        ;
;  LEDR[7]  ; CLOCK_50   ; 7.090 ; 7.090 ; Rise       ; CLOCK_50        ;
;  LEDR[8]  ; CLOCK_50   ; 6.355 ; 6.355 ; Rise       ; CLOCK_50        ;
;  LEDR[9]  ; CLOCK_50   ; 6.366 ; 6.366 ; Rise       ; CLOCK_50        ;
;  LEDR[10] ; CLOCK_50   ; 6.363 ; 6.363 ; Rise       ; CLOCK_50        ;
;  LEDR[11] ; CLOCK_50   ; 6.380 ; 6.380 ; Rise       ; CLOCK_50        ;
;  LEDR[12] ; CLOCK_50   ; 6.372 ; 6.372 ; Rise       ; CLOCK_50        ;
;  LEDR[13] ; CLOCK_50   ; 6.371 ; 6.371 ; Rise       ; CLOCK_50        ;
;  LEDR[14] ; CLOCK_50   ; 6.619 ; 6.619 ; Rise       ; CLOCK_50        ;
;  LEDR[15] ; CLOCK_50   ; 6.612 ; 6.612 ; Rise       ; CLOCK_50        ;
+-----------+------------+-------+-------+------------+-----------------+


+-----------------------------------------------------------------------+
; Minimum Clock to Output Times                                         ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; LEDR[*]   ; CLOCK_50   ; 6.355 ; 6.355 ; Rise       ; CLOCK_50        ;
;  LEDR[0]  ; CLOCK_50   ; 8.070 ; 8.070 ; Rise       ; CLOCK_50        ;
;  LEDR[1]  ; CLOCK_50   ; 8.004 ; 8.004 ; Rise       ; CLOCK_50        ;
;  LEDR[2]  ; CLOCK_50   ; 7.978 ; 7.978 ; Rise       ; CLOCK_50        ;
;  LEDR[3]  ; CLOCK_50   ; 7.990 ; 7.990 ; Rise       ; CLOCK_50        ;
;  LEDR[4]  ; CLOCK_50   ; 7.945 ; 7.945 ; Rise       ; CLOCK_50        ;
;  LEDR[5]  ; CLOCK_50   ; 7.513 ; 7.513 ; Rise       ; CLOCK_50        ;
;  LEDR[6]  ; CLOCK_50   ; 7.779 ; 7.779 ; Rise       ; CLOCK_50        ;
;  LEDR[7]  ; CLOCK_50   ; 7.090 ; 7.090 ; Rise       ; CLOCK_50        ;
;  LEDR[8]  ; CLOCK_50   ; 6.355 ; 6.355 ; Rise       ; CLOCK_50        ;
;  LEDR[9]  ; CLOCK_50   ; 6.366 ; 6.366 ; Rise       ; CLOCK_50        ;
;  LEDR[10] ; CLOCK_50   ; 6.363 ; 6.363 ; Rise       ; CLOCK_50        ;
;  LEDR[11] ; CLOCK_50   ; 6.380 ; 6.380 ; Rise       ; CLOCK_50        ;
;  LEDR[12] ; CLOCK_50   ; 6.372 ; 6.372 ; Rise       ; CLOCK_50        ;
;  LEDR[13] ; CLOCK_50   ; 6.371 ; 6.371 ; Rise       ; CLOCK_50        ;
;  LEDR[14] ; CLOCK_50   ; 6.619 ; 6.619 ; Rise       ; CLOCK_50        ;
;  LEDR[15] ; CLOCK_50   ; 6.612 ; 6.612 ; Rise       ; CLOCK_50        ;
+-----------+------------+-------+-------+------------+-----------------+


+-----------------------------------+
; Fast Model Setup Summary          ;
+----------+--------+---------------+
; Clock    ; Slack  ; End Point TNS ;
+----------+--------+---------------+
; CLOCK_50 ; -0.660 ; -15.430       ;
+----------+--------+---------------+


+----------------------------------+
; Fast Model Hold Summary          ;
+----------+-------+---------------+
; Clock    ; Slack ; End Point TNS ;
+----------+-------+---------------+
; CLOCK_50 ; 0.215 ; 0.000         ;
+----------+-------+---------------+


-------------------------------
; Fast Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Fast Model Removal Summary ;
------------------------------
No paths to report.


+----------------------------------------+
; Fast Model Minimum Pulse Width Summary ;
+----------+--------+--------------------+
; Clock    ; Slack  ; End Point TNS      ;
+----------+--------+--------------------+
; CLOCK_50 ; -1.380 ; -68.380            ;
+----------+--------+--------------------+


+----------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'CLOCK_50'                                                                                                                 ;
+--------+-------------------------------------+-------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                           ; To Node                 ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-------------------------------------+-------------------------+--------------+-------------+--------------+------------+------------+
; -0.660 ; multiplier:dut|A_tmp[1]             ; multiplier:dut|A_tmp[7] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.689      ;
; -0.646 ; multiplier:dut|A_tmp[2]             ; multiplier:dut|A_tmp[7] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.675      ;
; -0.625 ; multiplier:dut|A_tmp[2]             ; multiplier:dut|A_tmp[5] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.654      ;
; -0.616 ; multiplier:dut|A_tmp[1]             ; multiplier:dut|A_tmp[1] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.648      ;
; -0.612 ; multiplier:dut|current_state.UPLOAD ; multiplier:dut|A_tmp[5] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.002      ; 1.646      ;
; -0.612 ; multiplier:dut|current_state.UPLOAD ; multiplier:dut|A_tmp[6] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.002      ; 1.646      ;
; -0.612 ; multiplier:dut|current_state.UPLOAD ; multiplier:dut|A_tmp[7] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.002      ; 1.646      ;
; -0.604 ; multiplier:dut|A_tmp[2]             ; multiplier:dut|A_tmp[6] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.633      ;
; -0.586 ; multiplier:dut|A_tmp[1]             ; multiplier:dut|A_tmp[4] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.618      ;
; -0.584 ; multiplier:dut|REG[1]               ; multiplier:dut|A_tmp[3] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.001      ; 1.617      ;
; -0.584 ; multiplier:dut|A_tmp[3]             ; multiplier:dut|A_tmp[7] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.613      ;
; -0.573 ; multiplier:dut|M_tmp[0]             ; multiplier:dut|A_tmp[7] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.002     ; 1.603      ;
; -0.570 ; multiplier:dut|A_tmp[2]             ; multiplier:dut|A_tmp[4] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.602      ;
; -0.570 ; multiplier:dut|A_tmp[1]             ; multiplier:dut|A_tmp[3] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.602      ;
; -0.568 ; multiplier:dut|REG[1]               ; multiplier:dut|A_tmp[5] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.002     ; 1.598      ;
; -0.567 ; multiplier:dut|M_tmp[0]             ; multiplier:dut|A_tmp[4] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.001      ; 1.600      ;
; -0.564 ; multiplier:dut|REG[1]               ; multiplier:dut|A_tmp[7] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.002     ; 1.594      ;
; -0.562 ; multiplier:dut|A_tmp[4]             ; multiplier:dut|A_tmp[7] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.591      ;
; -0.559 ; multiplier:dut|count[0]             ; multiplier:dut|REG[14]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 1.595      ;
; -0.559 ; multiplier:dut|count[0]             ; multiplier:dut|REG[12]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 1.595      ;
; -0.559 ; multiplier:dut|count[0]             ; multiplier:dut|REG[15]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 1.595      ;
; -0.559 ; multiplier:dut|count[0]             ; multiplier:dut|REG[13]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 1.595      ;
; -0.559 ; multiplier:dut|count[0]             ; multiplier:dut|REG[11]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 1.595      ;
; -0.559 ; multiplier:dut|A_tmp[1]             ; multiplier:dut|A_tmp[5] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.588      ;
; -0.557 ; multiplier:dut|current_state.LOAD   ; multiplier:dut|REG[14]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 1.593      ;
; -0.557 ; multiplier:dut|current_state.LOAD   ; multiplier:dut|REG[12]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 1.593      ;
; -0.557 ; multiplier:dut|current_state.LOAD   ; multiplier:dut|REG[15]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 1.593      ;
; -0.557 ; multiplier:dut|current_state.LOAD   ; multiplier:dut|REG[13]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 1.593      ;
; -0.557 ; multiplier:dut|current_state.LOAD   ; multiplier:dut|REG[11]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 1.593      ;
; -0.554 ; multiplier:dut|A_tmp[2]             ; multiplier:dut|A_tmp[3] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.586      ;
; -0.552 ; multiplier:dut|M_tmp[0]             ; multiplier:dut|A_tmp[5] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.002     ; 1.582      ;
; -0.540 ; multiplier:dut|count[0]             ; multiplier:dut|REG[10]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.003      ; 1.575      ;
; -0.540 ; multiplier:dut|count[0]             ; multiplier:dut|REG[8]   ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.003      ; 1.575      ;
; -0.538 ; multiplier:dut|A_tmp[1]             ; multiplier:dut|A_tmp[6] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.567      ;
; -0.538 ; multiplier:dut|M_tmp[1]             ; multiplier:dut|A_tmp[4] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.001      ; 1.571      ;
; -0.538 ; multiplier:dut|current_state.LOAD   ; multiplier:dut|REG[10]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.003      ; 1.573      ;
; -0.538 ; multiplier:dut|current_state.LOAD   ; multiplier:dut|REG[8]   ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.003      ; 1.573      ;
; -0.531 ; multiplier:dut|M_tmp[0]             ; multiplier:dut|A_tmp[6] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.002     ; 1.561      ;
; -0.530 ; multiplier:dut|M_tmp[1]             ; multiplier:dut|A_tmp[7] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.002     ; 1.560      ;
; -0.529 ; multiplier:dut|M_tmp[4]             ; multiplier:dut|A_tmp[7] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.002     ; 1.559      ;
; -0.524 ; multiplier:dut|A_tmp[1]             ; multiplier:dut|A_tmp[2] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.556      ;
; -0.524 ; multiplier:dut|M_tmp[0]             ; multiplier:dut|A_tmp[1] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.001      ; 1.557      ;
; -0.518 ; multiplier:dut|M_tmp[0]             ; multiplier:dut|A_tmp[3] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.001      ; 1.551      ;
; -0.510 ; multiplier:dut|REG[1]               ; multiplier:dut|A_tmp[6] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.002     ; 1.540      ;
; -0.510 ; multiplier:dut|A_tmp[3]             ; multiplier:dut|A_tmp[4] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.542      ;
; -0.509 ; multiplier:dut|M_tmp[1]             ; multiplier:dut|A_tmp[6] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.002     ; 1.539      ;
; -0.505 ; multiplier:dut|M_tmp[2]             ; multiplier:dut|A_tmp[4] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.001      ; 1.538      ;
; -0.502 ; multiplier:dut|M_tmp[2]             ; multiplier:dut|A_tmp[7] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.002     ; 1.532      ;
; -0.497 ; multiplier:dut|M_tmp[1]             ; multiplier:dut|A_tmp[3] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.001      ; 1.530      ;
; -0.488 ; multiplier:dut|REG[2]               ; multiplier:dut|A_tmp[2] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.001      ; 1.521      ;
; -0.487 ; multiplier:dut|M_tmp[0]             ; multiplier:dut|A_tmp[2] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.001      ; 1.520      ;
; -0.483 ; multiplier:dut|M_tmp[5]             ; multiplier:dut|A_tmp[7] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.002     ; 1.513      ;
; -0.480 ; multiplier:dut|A_tmp[3]             ; multiplier:dut|A_tmp[5] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.509      ;
; -0.477 ; multiplier:dut|M_tmp[3]             ; multiplier:dut|A_tmp[4] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.001      ; 1.510      ;
; -0.475 ; multiplier:dut|count[2]             ; multiplier:dut|REG[14]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 1.511      ;
; -0.475 ; multiplier:dut|count[2]             ; multiplier:dut|REG[12]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 1.511      ;
; -0.475 ; multiplier:dut|count[2]             ; multiplier:dut|REG[15]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 1.511      ;
; -0.475 ; multiplier:dut|count[2]             ; multiplier:dut|REG[13]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 1.511      ;
; -0.475 ; multiplier:dut|count[2]             ; multiplier:dut|REG[11]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 1.511      ;
; -0.474 ; multiplier:dut|REG[2]               ; multiplier:dut|A_tmp[3] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.001      ; 1.507      ;
; -0.473 ; multiplier:dut|A_tmp[0]             ; multiplier:dut|A_tmp[4] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.005      ; 1.510      ;
; -0.470 ; multiplier:dut|M_tmp[2]             ; multiplier:dut|A_tmp[6] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.002     ; 1.500      ;
; -0.469 ; multiplier:dut|M_tmp[3]             ; multiplier:dut|A_tmp[7] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.002     ; 1.499      ;
; -0.465 ; multiplier:dut|A_tmp[0]             ; multiplier:dut|A_tmp[7] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.002      ; 1.499      ;
; -0.461 ; multiplier:dut|M_tmp[1]             ; multiplier:dut|A_tmp[5] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.002     ; 1.491      ;
; -0.460 ; multiplier:dut|A_tmp[4]             ; multiplier:dut|A_tmp[5] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.489      ;
; -0.460 ; multiplier:dut|M_tmp[1]             ; multiplier:dut|A_tmp[2] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.001      ; 1.493      ;
; -0.459 ; multiplier:dut|A_tmp[3]             ; multiplier:dut|A_tmp[6] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.488      ;
; -0.458 ; multiplier:dut|REG[2]               ; multiplier:dut|A_tmp[5] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.002     ; 1.488      ;
; -0.458 ; multiplier:dut|M_tmp[2]             ; multiplier:dut|A_tmp[3] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.001      ; 1.491      ;
; -0.456 ; multiplier:dut|count[2]             ; multiplier:dut|REG[10]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.003      ; 1.491      ;
; -0.456 ; multiplier:dut|count[2]             ; multiplier:dut|REG[8]   ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.003      ; 1.491      ;
; -0.454 ; multiplier:dut|REG[2]               ; multiplier:dut|A_tmp[7] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.002     ; 1.484      ;
; -0.453 ; multiplier:dut|current_state.SHIFT  ; multiplier:dut|REG[14]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 1.489      ;
; -0.453 ; multiplier:dut|current_state.SHIFT  ; multiplier:dut|REG[12]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 1.489      ;
; -0.453 ; multiplier:dut|current_state.SHIFT  ; multiplier:dut|REG[15]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 1.489      ;
; -0.453 ; multiplier:dut|current_state.SHIFT  ; multiplier:dut|REG[13]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 1.489      ;
; -0.453 ; multiplier:dut|current_state.SHIFT  ; multiplier:dut|REG[11]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 1.489      ;
; -0.448 ; multiplier:dut|count[0]             ; multiplier:dut|REG[7]   ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.003      ; 1.483      ;
; -0.448 ; multiplier:dut|count[0]             ; multiplier:dut|REG[5]   ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.003      ; 1.483      ;
; -0.448 ; multiplier:dut|count[0]             ; multiplier:dut|REG[3]   ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.003      ; 1.483      ;
; -0.448 ; multiplier:dut|count[0]             ; multiplier:dut|REG[6]   ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.003      ; 1.483      ;
; -0.448 ; multiplier:dut|count[0]             ; multiplier:dut|REG[4]   ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.003      ; 1.483      ;
; -0.447 ; multiplier:dut|A_tmp[5]             ; multiplier:dut|A_tmp[7] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.479      ;
; -0.446 ; multiplier:dut|REG[1]               ; multiplier:dut|A_tmp[1] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.001      ; 1.479      ;
; -0.446 ; multiplier:dut|current_state.LOAD   ; multiplier:dut|REG[7]   ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.003      ; 1.481      ;
; -0.446 ; multiplier:dut|current_state.LOAD   ; multiplier:dut|REG[5]   ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.003      ; 1.481      ;
; -0.446 ; multiplier:dut|current_state.LOAD   ; multiplier:dut|REG[3]   ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.003      ; 1.481      ;
; -0.446 ; multiplier:dut|current_state.LOAD   ; multiplier:dut|REG[6]   ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.003      ; 1.481      ;
; -0.446 ; multiplier:dut|current_state.LOAD   ; multiplier:dut|REG[4]   ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.003      ; 1.481      ;
; -0.445 ; multiplier:dut|REG[0]               ; multiplier:dut|A_tmp[3] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.000      ; 1.477      ;
; -0.444 ; multiplier:dut|M_tmp[3]             ; multiplier:dut|A_tmp[6] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.002     ; 1.474      ;
; -0.443 ; multiplier:dut|count[1]             ; multiplier:dut|REG[14]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 1.479      ;
; -0.443 ; multiplier:dut|count[1]             ; multiplier:dut|REG[12]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 1.479      ;
; -0.443 ; multiplier:dut|count[1]             ; multiplier:dut|REG[15]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 1.479      ;
; -0.443 ; multiplier:dut|count[1]             ; multiplier:dut|REG[13]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 1.479      ;
; -0.443 ; multiplier:dut|count[1]             ; multiplier:dut|REG[11]  ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.004      ; 1.479      ;
; -0.439 ; multiplier:dut|A_tmp[4]             ; multiplier:dut|A_tmp[6] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.003     ; 1.468      ;
; -0.438 ; multiplier:dut|REG[2]               ; multiplier:dut|A_tmp[4] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.001      ; 1.471      ;
; -0.438 ; multiplier:dut|A_tmp[0]             ; multiplier:dut|A_tmp[6] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; 0.002      ; 1.472      ;
+--------+-------------------------------------+-------------------------+--------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'CLOCK_50'                                                                                                                               ;
+-------+---------------------------------------+-------------------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node                             ; To Node                             ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+---------------------------------------+-------------------------------------+--------------+-------------+--------------+------------+------------+
; 0.215 ; multiplier:dut|count[0]               ; multiplier:dut|count[0]             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; multiplier:dut|count[1]               ; multiplier:dut|count[1]             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; multiplier:dut|count[2]               ; multiplier:dut|count[2]             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; multiplier:dut|REG[0]                 ; multiplier:dut|REG[0]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; multiplier:dut|REG[16]                ; multiplier:dut|REG[16]              ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; multiplier:dut|current_state.SEND     ; multiplier:dut|current_state.SEND   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.367      ;
; 0.239 ; multiplier:dut|REG[10]                ; multiplier:dut|REG[8]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.391      ;
; 0.243 ; multiplier:dut|REG[14]                ; multiplier:dut|REG[12]              ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.395      ;
; 0.243 ; multiplier:dut|REG[13]                ; multiplier:dut|result_o[12]         ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.395      ;
; 0.244 ; multiplier:dut|REG[13]                ; multiplier:dut|REG[11]              ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.396      ;
; 0.244 ; multiplier:dut|REG[14]                ; multiplier:dut|result_o[13]         ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.396      ;
; 0.246 ; multiplier:dut|REG[11]                ; multiplier:dut|result_o[10]         ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.398      ;
; 0.247 ; multiplier:dut|REG[15]                ; multiplier:dut|REG[13]              ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.399      ;
; 0.249 ; multiplier:dut|REG[15]                ; multiplier:dut|result_o[14]         ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.401      ;
; 0.255 ; multiplier:dut|count[1]               ; multiplier:dut|current_state.SHIFT  ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.407      ;
; 0.291 ; multiplier:dut|Q_tmp[3]               ; multiplier:dut|REG[4]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.443      ;
; 0.300 ; multiplier:dut|count[2]               ; multiplier:dut|current_state.SHIFT  ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.452      ;
; 0.304 ; multiplier:dut|current_state.PRE_BOOT ; multiplier:dut|current_state.LOAD   ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.456      ;
; 0.308 ; multiplier:dut|REG[8]                 ; multiplier:dut|result_o[7]          ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.001      ; 0.461      ;
; 0.330 ; multiplier:dut|REG[12]                ; multiplier:dut|result_o[11]         ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.482      ;
; 0.361 ; multiplier:dut|Q_tmp[2]               ; multiplier:dut|REG[3]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.513      ;
; 0.364 ; multiplier:dut|REG[6]                 ; multiplier:dut|REG[4]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.516      ;
; 0.366 ; multiplier:dut|Q_tmp[4]               ; multiplier:dut|REG[5]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.518      ;
; 0.367 ; multiplier:dut|current_state.SHIFT    ; multiplier:dut|REG[9]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.519      ;
; 0.373 ; multiplier:dut|Q_tmp[6]               ; multiplier:dut|REG[7]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.525      ;
; 0.373 ; multiplier:dut|REG[8]                 ; multiplier:dut|Q_tmp[7]             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.525      ;
; 0.376 ; multiplier:dut|Q_tmp[5]               ; multiplier:dut|REG[6]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.528      ;
; 0.376 ; multiplier:dut|REG[8]                 ; multiplier:dut|REG[6]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.528      ;
; 0.377 ; multiplier:dut|REG[7]                 ; multiplier:dut|Q_tmp[6]             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.529      ;
; 0.379 ; multiplier:dut|count[0]               ; multiplier:dut|count[1]             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.531      ;
; 0.380 ; multiplier:dut|current_state.CALC     ; multiplier:dut|A_tmp[2]             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.532      ;
; 0.380 ; multiplier:dut|current_state.CALC     ; multiplier:dut|A_tmp[1]             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.532      ;
; 0.382 ; multiplier:dut|current_state.CALC     ; multiplier:dut|A_tmp[4]             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.534      ;
; 0.382 ; multiplier:dut|current_state.CALC     ; multiplier:dut|A_tmp[3]             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.534      ;
; 0.382 ; multiplier:dut|current_state.LOAD     ; multiplier:dut|current_state.SHIFT  ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.534      ;
; 0.384 ; multiplier:dut|REG[3]                 ; multiplier:dut|Q_tmp[2]             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.536      ;
; 0.384 ; multiplier:dut|count[0]               ; multiplier:dut|current_state.SHIFT  ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.536      ;
; 0.385 ; multiplier:dut|REG[5]                 ; multiplier:dut|REG[3]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.537      ;
; 0.385 ; multiplier:dut|REG[7]                 ; multiplier:dut|REG[5]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.537      ;
; 0.389 ; multiplier:dut|REG[5]                 ; multiplier:dut|Q_tmp[4]             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.541      ;
; 0.424 ; multiplier:dut|current_state.SHIFT    ; multiplier:dut|current_state.UPLOAD ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.576      ;
; 0.425 ; multiplier:dut|REG[7]                 ; multiplier:dut|result_o[6]          ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.004      ; 0.581      ;
; 0.433 ; multiplier:dut|REG[3]                 ; multiplier:dut|result_o[2]          ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.004      ; 0.589      ;
; 0.436 ; multiplier:dut|REG[4]                 ; multiplier:dut|result_o[3]          ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.004      ; 0.592      ;
; 0.437 ; multiplier:dut|REG[16]                ; multiplier:dut|REG[14]              ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.004      ; 0.593      ;
; 0.437 ; multiplier:dut|REG[16]                ; multiplier:dut|REG[15]              ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.004      ; 0.593      ;
; 0.437 ; multiplier:dut|current_state.UPLOAD   ; multiplier:dut|A_tmp[0]             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.589      ;
; 0.441 ; multiplier:dut|REG[16]                ; multiplier:dut|result_o[15]         ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.004      ; 0.597      ;
; 0.449 ; multiplier:dut|REG[14]                ; multiplier:dut|A_tmp[5]             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; -0.002     ; 0.599      ;
; 0.450 ; multiplier:dut|REG[6]                 ; multiplier:dut|result_o[5]          ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.004      ; 0.606      ;
; 0.455 ; multiplier:dut|current_state.PRE_BOOT ; multiplier:dut|M_tmp[4]             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.004      ; 0.611      ;
; 0.456 ; multiplier:dut|current_state.PRE_BOOT ; multiplier:dut|M_tmp[3]             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.004      ; 0.612      ;
; 0.456 ; multiplier:dut|current_state.PRE_BOOT ; multiplier:dut|M_tmp[5]             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.004      ; 0.612      ;
; 0.471 ; multiplier:dut|REG[4]                 ; multiplier:dut|Q_tmp[3]             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.623      ;
; 0.482 ; multiplier:dut|Q_tmp[7]               ; multiplier:dut|REG[8]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.634      ;
; 0.484 ; multiplier:dut|current_state.SHIFT    ; multiplier:dut|REG[6]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.003      ; 0.639      ;
; 0.485 ; multiplier:dut|current_state.SHIFT    ; multiplier:dut|REG[7]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.003      ; 0.640      ;
; 0.486 ; multiplier:dut|current_state.SHIFT    ; multiplier:dut|REG[4]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.003      ; 0.641      ;
; 0.486 ; multiplier:dut|current_state.SHIFT    ; multiplier:dut|REG[5]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.003      ; 0.641      ;
; 0.487 ; multiplier:dut|current_state.SHIFT    ; multiplier:dut|REG[3]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.003      ; 0.642      ;
; 0.493 ; multiplier:dut|A_tmp[5]               ; multiplier:dut|REG[14]              ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.002      ; 0.647      ;
; 0.495 ; multiplier:dut|A_tmp[6]               ; multiplier:dut|REG[15]              ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.002      ; 0.649      ;
; 0.499 ; multiplier:dut|REG[6]                 ; multiplier:dut|Q_tmp[5]             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.651      ;
; 0.501 ; multiplier:dut|current_state.UPLOAD   ; multiplier:dut|Q_tmp[2]             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.003      ; 0.656      ;
; 0.502 ; multiplier:dut|A_tmp[7]               ; multiplier:dut|REG[16]              ; CLOCK_50     ; CLOCK_50    ; 0.000        ; -0.002     ; 0.652      ;
; 0.503 ; multiplier:dut|current_state.UPLOAD   ; multiplier:dut|Q_tmp[5]             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.003      ; 0.658      ;
; 0.504 ; multiplier:dut|REG[10]                ; multiplier:dut|result_o[9]          ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.004      ; 0.660      ;
; 0.512 ; multiplier:dut|current_state.UPLOAD   ; multiplier:dut|A_tmp[7]             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.002      ; 0.666      ;
; 0.512 ; multiplier:dut|REG[5]                 ; multiplier:dut|result_o[4]          ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.004      ; 0.668      ;
; 0.512 ; multiplier:dut|current_state.UPLOAD   ; multiplier:dut|A_tmp[5]             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.002      ; 0.666      ;
; 0.513 ; multiplier:dut|current_state.UPLOAD   ; multiplier:dut|Q_tmp[4]             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.003      ; 0.668      ;
; 0.514 ; multiplier:dut|current_state.UPLOAD   ; multiplier:dut|A_tmp[6]             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.002      ; 0.668      ;
; 0.533 ; multiplier:dut|A_tmp[0]               ; multiplier:dut|REG[9]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.685      ;
; 0.540 ; multiplier:dut|count[1]               ; multiplier:dut|REG[16]              ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.692      ;
; 0.542 ; multiplier:dut|REG[1]                 ; multiplier:dut|result_o[0]          ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.003      ; 0.697      ;
; 0.544 ; multiplier:dut|REG[2]                 ; multiplier:dut|result_o[1]          ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.003      ; 0.699      ;
; 0.565 ; multiplier:dut|REG[1]                 ; multiplier:dut|Q_tmp[0]             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; -0.001     ; 0.716      ;
; 0.569 ; multiplier:dut|REG[15]                ; multiplier:dut|A_tmp[6]             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; -0.002     ; 0.719      ;
; 0.571 ; multiplier:dut|current_state.PRE_BOOT ; multiplier:dut|Q_tmp[7]             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.003      ; 0.726      ;
; 0.571 ; multiplier:dut|REG[16]                ; multiplier:dut|A_tmp[7]             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.002      ; 0.725      ;
; 0.575 ; multiplier:dut|current_state.SHIFT    ; multiplier:dut|REG[8]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.003      ; 0.730      ;
; 0.576 ; multiplier:dut|current_state.PRE_BOOT ; multiplier:dut|Q_tmp[1]             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.003      ; 0.731      ;
; 0.576 ; multiplier:dut|current_state.PRE_BOOT ; multiplier:dut|Q_tmp[3]             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.003      ; 0.731      ;
; 0.577 ; multiplier:dut|current_state.PRE_BOOT ; multiplier:dut|Q_tmp[6]             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.003      ; 0.732      ;
; 0.578 ; multiplier:dut|current_state.PRE_BOOT ; multiplier:dut|M_tmp[1]             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.004      ; 0.734      ;
; 0.579 ; multiplier:dut|REG[2]                 ; multiplier:dut|REG[0]               ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.001      ; 0.732      ;
; 0.585 ; multiplier:dut|current_state.INIT     ; multiplier:dut|count[2]             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; -0.005     ; 0.732      ;
; 0.585 ; multiplier:dut|count[2]               ; multiplier:dut|REG[16]              ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.737      ;
; 0.586 ; multiplier:dut|current_state.INIT     ; multiplier:dut|count[1]             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; -0.005     ; 0.733      ;
; 0.587 ; multiplier:dut|current_state.INIT     ; multiplier:dut|count[0]             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; -0.005     ; 0.734      ;
; 0.587 ; multiplier:dut|A_tmp[2]               ; multiplier:dut|REG[11]              ; CLOCK_50     ; CLOCK_50    ; 0.000        ; -0.001     ; 0.738      ;
; 0.590 ; multiplier:dut|current_state.SEND     ; multiplier:dut|result_o[7]          ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.001      ; 0.743      ;
; 0.590 ; multiplier:dut|current_state.SEND     ; multiplier:dut|result_o[10]         ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.001      ; 0.743      ;
; 0.590 ; multiplier:dut|current_state.SEND     ; multiplier:dut|result_o[11]         ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.001      ; 0.743      ;
; 0.590 ; multiplier:dut|current_state.SEND     ; multiplier:dut|result_o[12]         ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.001      ; 0.743      ;
; 0.590 ; multiplier:dut|current_state.SEND     ; multiplier:dut|result_o[13]         ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.001      ; 0.743      ;
; 0.590 ; multiplier:dut|current_state.SEND     ; multiplier:dut|result_o[14]         ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.001      ; 0.743      ;
; 0.590 ; multiplier:dut|current_state.SEND     ; multiplier:dut|result_o[15]         ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.001      ; 0.743      ;
; 0.594 ; multiplier:dut|REG[9]                 ; multiplier:dut|A_tmp[0]             ; CLOCK_50     ; CLOCK_50    ; 0.000        ; 0.000      ; 0.746      ;
; 0.596 ; multiplier:dut|A_tmp[3]               ; multiplier:dut|REG[12]              ; CLOCK_50     ; CLOCK_50    ; 0.000        ; -0.001     ; 0.747      ;
+-------+---------------------------------------+-------------------------------------+--------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'CLOCK_50'                                                                                ;
+--------+--------------+----------------+------------------+----------+------------+---------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock    ; Clock Edge ; Target                                ;
+--------+--------------+----------------+------------------+----------+------------+---------------------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; CLOCK_50 ; Rise       ; CLOCK_50                              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|A_tmp[0]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|A_tmp[0]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|A_tmp[1]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|A_tmp[1]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|A_tmp[2]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|A_tmp[2]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|A_tmp[3]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|A_tmp[3]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|A_tmp[4]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|A_tmp[4]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|A_tmp[5]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|A_tmp[5]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|A_tmp[6]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|A_tmp[6]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|A_tmp[7]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|A_tmp[7]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|M_tmp[0]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|M_tmp[0]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|M_tmp[1]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|M_tmp[1]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|M_tmp[2]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|M_tmp[2]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|M_tmp[3]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|M_tmp[3]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|M_tmp[4]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|M_tmp[4]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|M_tmp[5]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|M_tmp[5]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|M_tmp[6]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|M_tmp[6]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|M_tmp[7]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|M_tmp[7]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|Q_tmp[0]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|Q_tmp[0]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|Q_tmp[1]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|Q_tmp[1]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|Q_tmp[2]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|Q_tmp[2]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|Q_tmp[3]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|Q_tmp[3]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|Q_tmp[4]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|Q_tmp[4]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|Q_tmp[5]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|Q_tmp[5]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|Q_tmp[6]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|Q_tmp[6]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|Q_tmp[7]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|Q_tmp[7]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|REG[0]                 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|REG[0]                 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|REG[10]                ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|REG[10]                ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|REG[11]                ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|REG[11]                ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|REG[12]                ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|REG[12]                ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|REG[13]                ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|REG[13]                ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|REG[14]                ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|REG[14]                ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|REG[15]                ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|REG[15]                ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|REG[16]                ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|REG[16]                ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|REG[1]                 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|REG[1]                 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|REG[2]                 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|REG[2]                 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|REG[3]                 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|REG[3]                 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|REG[4]                 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|REG[4]                 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|REG[5]                 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|REG[5]                 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|REG[6]                 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|REG[6]                 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|REG[7]                 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|REG[7]                 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|REG[8]                 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|REG[8]                 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|REG[9]                 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|REG[9]                 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|count[0]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|count[0]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|count[1]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|count[1]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|count[2]               ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|count[2]               ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|current_state.CALC     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|current_state.CALC     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|current_state.INIT     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|current_state.INIT     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|current_state.LOAD     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|current_state.LOAD     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|current_state.PRE_BOOT ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|current_state.PRE_BOOT ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|current_state.SEND     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; multiplier:dut|current_state.SEND     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; multiplier:dut|current_state.SHIFT    ;
+--------+--------------+----------------+------------------+----------+------------+---------------------------------------+


+-------------------------------------------------------------------------+
; Setup Times                                                             ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; SW[*]     ; CLOCK_50   ; 2.641  ; 2.641  ; Rise       ; CLOCK_50        ;
;  SW[0]    ; CLOCK_50   ; 0.443  ; 0.443  ; Rise       ; CLOCK_50        ;
;  SW[1]    ; CLOCK_50   ; -0.011 ; -0.011 ; Rise       ; CLOCK_50        ;
;  SW[2]    ; CLOCK_50   ; 0.495  ; 0.495  ; Rise       ; CLOCK_50        ;
;  SW[3]    ; CLOCK_50   ; -0.484 ; -0.484 ; Rise       ; CLOCK_50        ;
;  SW[4]    ; CLOCK_50   ; -0.485 ; -0.485 ; Rise       ; CLOCK_50        ;
;  SW[5]    ; CLOCK_50   ; -0.551 ; -0.551 ; Rise       ; CLOCK_50        ;
;  SW[6]    ; CLOCK_50   ; -0.049 ; -0.049 ; Rise       ; CLOCK_50        ;
;  SW[7]    ; CLOCK_50   ; 0.923  ; 0.923  ; Rise       ; CLOCK_50        ;
;  SW[8]    ; CLOCK_50   ; 0.367  ; 0.367  ; Rise       ; CLOCK_50        ;
;  SW[9]    ; CLOCK_50   ; 0.407  ; 0.407  ; Rise       ; CLOCK_50        ;
;  SW[10]   ; CLOCK_50   ; 0.013  ; 0.013  ; Rise       ; CLOCK_50        ;
;  SW[11]   ; CLOCK_50   ; 0.013  ; 0.013  ; Rise       ; CLOCK_50        ;
;  SW[12]   ; CLOCK_50   ; 0.021  ; 0.021  ; Rise       ; CLOCK_50        ;
;  SW[13]   ; CLOCK_50   ; 2.641  ; 2.641  ; Rise       ; CLOCK_50        ;
;  SW[14]   ; CLOCK_50   ; 2.513  ; 2.513  ; Rise       ; CLOCK_50        ;
;  SW[15]   ; CLOCK_50   ; 2.534  ; 2.534  ; Rise       ; CLOCK_50        ;
+-----------+------------+--------+--------+------------+-----------------+


+-------------------------------------------------------------------------+
; Hold Times                                                              ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; SW[*]     ; CLOCK_50   ; 0.671  ; 0.671  ; Rise       ; CLOCK_50        ;
;  SW[0]    ; CLOCK_50   ; -0.323 ; -0.323 ; Rise       ; CLOCK_50        ;
;  SW[1]    ; CLOCK_50   ; 0.131  ; 0.131  ; Rise       ; CLOCK_50        ;
;  SW[2]    ; CLOCK_50   ; -0.375 ; -0.375 ; Rise       ; CLOCK_50        ;
;  SW[3]    ; CLOCK_50   ; 0.604  ; 0.604  ; Rise       ; CLOCK_50        ;
;  SW[4]    ; CLOCK_50   ; 0.605  ; 0.605  ; Rise       ; CLOCK_50        ;
;  SW[5]    ; CLOCK_50   ; 0.671  ; 0.671  ; Rise       ; CLOCK_50        ;
;  SW[6]    ; CLOCK_50   ; 0.169  ; 0.169  ; Rise       ; CLOCK_50        ;
;  SW[7]    ; CLOCK_50   ; -0.803 ; -0.803 ; Rise       ; CLOCK_50        ;
;  SW[8]    ; CLOCK_50   ; -0.247 ; -0.247 ; Rise       ; CLOCK_50        ;
;  SW[9]    ; CLOCK_50   ; -0.287 ; -0.287 ; Rise       ; CLOCK_50        ;
;  SW[10]   ; CLOCK_50   ; 0.107  ; 0.107  ; Rise       ; CLOCK_50        ;
;  SW[11]   ; CLOCK_50   ; 0.107  ; 0.107  ; Rise       ; CLOCK_50        ;
;  SW[12]   ; CLOCK_50   ; 0.099  ; 0.099  ; Rise       ; CLOCK_50        ;
;  SW[13]   ; CLOCK_50   ; -2.521 ; -2.521 ; Rise       ; CLOCK_50        ;
;  SW[14]   ; CLOCK_50   ; -2.393 ; -2.393 ; Rise       ; CLOCK_50        ;
;  SW[15]   ; CLOCK_50   ; -2.414 ; -2.414 ; Rise       ; CLOCK_50        ;
+-----------+------------+--------+--------+------------+-----------------+


+-----------------------------------------------------------------------+
; Clock to Output Times                                                 ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; LEDR[*]   ; CLOCK_50   ; 4.443 ; 4.443 ; Rise       ; CLOCK_50        ;
;  LEDR[0]  ; CLOCK_50   ; 4.443 ; 4.443 ; Rise       ; CLOCK_50        ;
;  LEDR[1]  ; CLOCK_50   ; 4.401 ; 4.401 ; Rise       ; CLOCK_50        ;
;  LEDR[2]  ; CLOCK_50   ; 4.372 ; 4.372 ; Rise       ; CLOCK_50        ;
;  LEDR[3]  ; CLOCK_50   ; 4.379 ; 4.379 ; Rise       ; CLOCK_50        ;
;  LEDR[4]  ; CLOCK_50   ; 4.384 ; 4.384 ; Rise       ; CLOCK_50        ;
;  LEDR[5]  ; CLOCK_50   ; 4.204 ; 4.204 ; Rise       ; CLOCK_50        ;
;  LEDR[6]  ; CLOCK_50   ; 4.294 ; 4.294 ; Rise       ; CLOCK_50        ;
;  LEDR[7]  ; CLOCK_50   ; 4.024 ; 4.024 ; Rise       ; CLOCK_50        ;
;  LEDR[8]  ; CLOCK_50   ; 3.632 ; 3.632 ; Rise       ; CLOCK_50        ;
;  LEDR[9]  ; CLOCK_50   ; 3.643 ; 3.643 ; Rise       ; CLOCK_50        ;
;  LEDR[10] ; CLOCK_50   ; 3.642 ; 3.642 ; Rise       ; CLOCK_50        ;
;  LEDR[11] ; CLOCK_50   ; 3.652 ; 3.652 ; Rise       ; CLOCK_50        ;
;  LEDR[12] ; CLOCK_50   ; 3.650 ; 3.650 ; Rise       ; CLOCK_50        ;
;  LEDR[13] ; CLOCK_50   ; 3.650 ; 3.650 ; Rise       ; CLOCK_50        ;
;  LEDR[14] ; CLOCK_50   ; 3.769 ; 3.769 ; Rise       ; CLOCK_50        ;
;  LEDR[15] ; CLOCK_50   ; 3.767 ; 3.767 ; Rise       ; CLOCK_50        ;
+-----------+------------+-------+-------+------------+-----------------+


+-----------------------------------------------------------------------+
; Minimum Clock to Output Times                                         ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; LEDR[*]   ; CLOCK_50   ; 3.632 ; 3.632 ; Rise       ; CLOCK_50        ;
;  LEDR[0]  ; CLOCK_50   ; 4.443 ; 4.443 ; Rise       ; CLOCK_50        ;
;  LEDR[1]  ; CLOCK_50   ; 4.401 ; 4.401 ; Rise       ; CLOCK_50        ;
;  LEDR[2]  ; CLOCK_50   ; 4.372 ; 4.372 ; Rise       ; CLOCK_50        ;
;  LEDR[3]  ; CLOCK_50   ; 4.379 ; 4.379 ; Rise       ; CLOCK_50        ;
;  LEDR[4]  ; CLOCK_50   ; 4.384 ; 4.384 ; Rise       ; CLOCK_50        ;
;  LEDR[5]  ; CLOCK_50   ; 4.204 ; 4.204 ; Rise       ; CLOCK_50        ;
;  LEDR[6]  ; CLOCK_50   ; 4.294 ; 4.294 ; Rise       ; CLOCK_50        ;
;  LEDR[7]  ; CLOCK_50   ; 4.024 ; 4.024 ; Rise       ; CLOCK_50        ;
;  LEDR[8]  ; CLOCK_50   ; 3.632 ; 3.632 ; Rise       ; CLOCK_50        ;
;  LEDR[9]  ; CLOCK_50   ; 3.643 ; 3.643 ; Rise       ; CLOCK_50        ;
;  LEDR[10] ; CLOCK_50   ; 3.642 ; 3.642 ; Rise       ; CLOCK_50        ;
;  LEDR[11] ; CLOCK_50   ; 3.652 ; 3.652 ; Rise       ; CLOCK_50        ;
;  LEDR[12] ; CLOCK_50   ; 3.650 ; 3.650 ; Rise       ; CLOCK_50        ;
;  LEDR[13] ; CLOCK_50   ; 3.650 ; 3.650 ; Rise       ; CLOCK_50        ;
;  LEDR[14] ; CLOCK_50   ; 3.769 ; 3.769 ; Rise       ; CLOCK_50        ;
;  LEDR[15] ; CLOCK_50   ; 3.767 ; 3.767 ; Rise       ; CLOCK_50        ;
+-----------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------------------+
; Multicorner Timing Analysis Summary                                           ;
+------------------+---------+-------+----------+---------+---------------------+
; Clock            ; Setup   ; Hold  ; Recovery ; Removal ; Minimum Pulse Width ;
+------------------+---------+-------+----------+---------+---------------------+
; Worst-case Slack ; -2.829  ; 0.215 ; N/A      ; N/A     ; -1.380              ;
;  CLOCK_50        ; -2.829  ; 0.215 ; N/A      ; N/A     ; -1.380              ;
; Design-wide TNS  ; -91.637 ; 0.0   ; 0.0      ; 0.0     ; -68.38              ;
;  CLOCK_50        ; -91.637 ; 0.000 ; N/A      ; N/A     ; -68.380             ;
+------------------+---------+-------+----------+---------+---------------------+


+-------------------------------------------------------------------------+
; Setup Times                                                             ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; SW[*]     ; CLOCK_50   ; 4.874  ; 4.874  ; Rise       ; CLOCK_50        ;
;  SW[0]    ; CLOCK_50   ; 1.416  ; 1.416  ; Rise       ; CLOCK_50        ;
;  SW[1]    ; CLOCK_50   ; 0.493  ; 0.493  ; Rise       ; CLOCK_50        ;
;  SW[2]    ; CLOCK_50   ; 1.616  ; 1.616  ; Rise       ; CLOCK_50        ;
;  SW[3]    ; CLOCK_50   ; -0.368 ; -0.368 ; Rise       ; CLOCK_50        ;
;  SW[4]    ; CLOCK_50   ; -0.398 ; -0.398 ; Rise       ; CLOCK_50        ;
;  SW[5]    ; CLOCK_50   ; -0.491 ; -0.491 ; Rise       ; CLOCK_50        ;
;  SW[6]    ; CLOCK_50   ; 0.535  ; 0.535  ; Rise       ; CLOCK_50        ;
;  SW[7]    ; CLOCK_50   ; 2.297  ; 2.297  ; Rise       ; CLOCK_50        ;
;  SW[8]    ; CLOCK_50   ; 1.087  ; 1.087  ; Rise       ; CLOCK_50        ;
;  SW[9]    ; CLOCK_50   ; 1.149  ; 1.149  ; Rise       ; CLOCK_50        ;
;  SW[10]   ; CLOCK_50   ; 0.560  ; 0.560  ; Rise       ; CLOCK_50        ;
;  SW[11]   ; CLOCK_50   ; 0.562  ; 0.562  ; Rise       ; CLOCK_50        ;
;  SW[12]   ; CLOCK_50   ; 0.582  ; 0.582  ; Rise       ; CLOCK_50        ;
;  SW[13]   ; CLOCK_50   ; 4.874  ; 4.874  ; Rise       ; CLOCK_50        ;
;  SW[14]   ; CLOCK_50   ; 4.642  ; 4.642  ; Rise       ; CLOCK_50        ;
;  SW[15]   ; CLOCK_50   ; 4.744  ; 4.744  ; Rise       ; CLOCK_50        ;
+-----------+------------+--------+--------+------------+-----------------+


+-------------------------------------------------------------------------+
; Hold Times                                                              ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; SW[*]     ; CLOCK_50   ; 0.721  ; 0.721  ; Rise       ; CLOCK_50        ;
;  SW[0]    ; CLOCK_50   ; -0.323 ; -0.323 ; Rise       ; CLOCK_50        ;
;  SW[1]    ; CLOCK_50   ; 0.131  ; 0.131  ; Rise       ; CLOCK_50        ;
;  SW[2]    ; CLOCK_50   ; -0.375 ; -0.375 ; Rise       ; CLOCK_50        ;
;  SW[3]    ; CLOCK_50   ; 0.604  ; 0.604  ; Rise       ; CLOCK_50        ;
;  SW[4]    ; CLOCK_50   ; 0.628  ; 0.628  ; Rise       ; CLOCK_50        ;
;  SW[5]    ; CLOCK_50   ; 0.721  ; 0.721  ; Rise       ; CLOCK_50        ;
;  SW[6]    ; CLOCK_50   ; 0.169  ; 0.169  ; Rise       ; CLOCK_50        ;
;  SW[7]    ; CLOCK_50   ; -0.803 ; -0.803 ; Rise       ; CLOCK_50        ;
;  SW[8]    ; CLOCK_50   ; -0.247 ; -0.247 ; Rise       ; CLOCK_50        ;
;  SW[9]    ; CLOCK_50   ; -0.287 ; -0.287 ; Rise       ; CLOCK_50        ;
;  SW[10]   ; CLOCK_50   ; 0.107  ; 0.107  ; Rise       ; CLOCK_50        ;
;  SW[11]   ; CLOCK_50   ; 0.107  ; 0.107  ; Rise       ; CLOCK_50        ;
;  SW[12]   ; CLOCK_50   ; 0.099  ; 0.099  ; Rise       ; CLOCK_50        ;
;  SW[13]   ; CLOCK_50   ; -2.521 ; -2.521 ; Rise       ; CLOCK_50        ;
;  SW[14]   ; CLOCK_50   ; -2.393 ; -2.393 ; Rise       ; CLOCK_50        ;
;  SW[15]   ; CLOCK_50   ; -2.414 ; -2.414 ; Rise       ; CLOCK_50        ;
+-----------+------------+--------+--------+------------+-----------------+


+-----------------------------------------------------------------------+
; Clock to Output Times                                                 ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; LEDR[*]   ; CLOCK_50   ; 8.070 ; 8.070 ; Rise       ; CLOCK_50        ;
;  LEDR[0]  ; CLOCK_50   ; 8.070 ; 8.070 ; Rise       ; CLOCK_50        ;
;  LEDR[1]  ; CLOCK_50   ; 8.004 ; 8.004 ; Rise       ; CLOCK_50        ;
;  LEDR[2]  ; CLOCK_50   ; 7.978 ; 7.978 ; Rise       ; CLOCK_50        ;
;  LEDR[3]  ; CLOCK_50   ; 7.990 ; 7.990 ; Rise       ; CLOCK_50        ;
;  LEDR[4]  ; CLOCK_50   ; 7.945 ; 7.945 ; Rise       ; CLOCK_50        ;
;  LEDR[5]  ; CLOCK_50   ; 7.513 ; 7.513 ; Rise       ; CLOCK_50        ;
;  LEDR[6]  ; CLOCK_50   ; 7.779 ; 7.779 ; Rise       ; CLOCK_50        ;
;  LEDR[7]  ; CLOCK_50   ; 7.090 ; 7.090 ; Rise       ; CLOCK_50        ;
;  LEDR[8]  ; CLOCK_50   ; 6.355 ; 6.355 ; Rise       ; CLOCK_50        ;
;  LEDR[9]  ; CLOCK_50   ; 6.366 ; 6.366 ; Rise       ; CLOCK_50        ;
;  LEDR[10] ; CLOCK_50   ; 6.363 ; 6.363 ; Rise       ; CLOCK_50        ;
;  LEDR[11] ; CLOCK_50   ; 6.380 ; 6.380 ; Rise       ; CLOCK_50        ;
;  LEDR[12] ; CLOCK_50   ; 6.372 ; 6.372 ; Rise       ; CLOCK_50        ;
;  LEDR[13] ; CLOCK_50   ; 6.371 ; 6.371 ; Rise       ; CLOCK_50        ;
;  LEDR[14] ; CLOCK_50   ; 6.619 ; 6.619 ; Rise       ; CLOCK_50        ;
;  LEDR[15] ; CLOCK_50   ; 6.612 ; 6.612 ; Rise       ; CLOCK_50        ;
+-----------+------------+-------+-------+------------+-----------------+


+-----------------------------------------------------------------------+
; Minimum Clock to Output Times                                         ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; LEDR[*]   ; CLOCK_50   ; 3.632 ; 3.632 ; Rise       ; CLOCK_50        ;
;  LEDR[0]  ; CLOCK_50   ; 4.443 ; 4.443 ; Rise       ; CLOCK_50        ;
;  LEDR[1]  ; CLOCK_50   ; 4.401 ; 4.401 ; Rise       ; CLOCK_50        ;
;  LEDR[2]  ; CLOCK_50   ; 4.372 ; 4.372 ; Rise       ; CLOCK_50        ;
;  LEDR[3]  ; CLOCK_50   ; 4.379 ; 4.379 ; Rise       ; CLOCK_50        ;
;  LEDR[4]  ; CLOCK_50   ; 4.384 ; 4.384 ; Rise       ; CLOCK_50        ;
;  LEDR[5]  ; CLOCK_50   ; 4.204 ; 4.204 ; Rise       ; CLOCK_50        ;
;  LEDR[6]  ; CLOCK_50   ; 4.294 ; 4.294 ; Rise       ; CLOCK_50        ;
;  LEDR[7]  ; CLOCK_50   ; 4.024 ; 4.024 ; Rise       ; CLOCK_50        ;
;  LEDR[8]  ; CLOCK_50   ; 3.632 ; 3.632 ; Rise       ; CLOCK_50        ;
;  LEDR[9]  ; CLOCK_50   ; 3.643 ; 3.643 ; Rise       ; CLOCK_50        ;
;  LEDR[10] ; CLOCK_50   ; 3.642 ; 3.642 ; Rise       ; CLOCK_50        ;
;  LEDR[11] ; CLOCK_50   ; 3.652 ; 3.652 ; Rise       ; CLOCK_50        ;
;  LEDR[12] ; CLOCK_50   ; 3.650 ; 3.650 ; Rise       ; CLOCK_50        ;
;  LEDR[13] ; CLOCK_50   ; 3.650 ; 3.650 ; Rise       ; CLOCK_50        ;
;  LEDR[14] ; CLOCK_50   ; 3.769 ; 3.769 ; Rise       ; CLOCK_50        ;
;  LEDR[15] ; CLOCK_50   ; 3.767 ; 3.767 ; Rise       ; CLOCK_50        ;
+-----------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------+
; Setup Transfers                                                   ;
+------------+----------+----------+----------+----------+----------+
; From Clock ; To Clock ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+----------+----------+----------+----------+----------+
; CLOCK_50   ; CLOCK_50 ; 694      ; 0        ; 0        ; 0        ;
+------------+----------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+-------------------------------------------------------------------+
; Hold Transfers                                                    ;
+------------+----------+----------+----------+----------+----------+
; From Clock ; To Clock ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+----------+----------+----------+----------+----------+
; CLOCK_50   ; CLOCK_50 ; 694      ; 0        ; 0        ; 0        ;
+------------+----------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


---------------
; Report TCCS ;
---------------
No dedicated SERDES Transmitter circuitry present in device or used in design


---------------
; Report RSKM ;
---------------
No dedicated SERDES Receiver circuitry present in device or used in design


+------------------------------------------------+
; Unconstrained Paths                            ;
+---------------------------------+-------+------+
; Property                        ; Setup ; Hold ;
+---------------------------------+-------+------+
; Illegal Clocks                  ; 0     ; 0    ;
; Unconstrained Clocks            ; 0     ; 0    ;
; Unconstrained Input Ports       ; 16    ; 16   ;
; Unconstrained Input Port Paths  ; 16    ; 16   ;
; Unconstrained Output Ports      ; 16    ; 16   ;
; Unconstrained Output Port Paths ; 16    ; 16   ;
+---------------------------------+-------+------+


+------------------------------------+
; TimeQuest Timing Analyzer Messages ;
+------------------------------------+
Info: *******************************************************************
Info: Running Quartus II 64-Bit TimeQuest Timing Analyzer
    Info: Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition
    Info: Processing started: Sun Mar 05 13:16:31 2023
Info: Command: quartus_sta wrapper -c wrapper
Info: qsta_default_script.tcl version: #1
Warning (20028): Parallel compilation is not licensed and has been disabled
Info (21077): Low junction temperature is 0 degrees C
Info (21077): High junction temperature is 85 degrees C
Critical Warning (332012): Synopsys Design Constraints File file not found: 'wrapper.sdc'. A Synopsys Design Constraints File is required by the TimeQuest Timing Analyzer to get proper timing constraints. Without it, the Compiler will not properly optimize the design.
Info (332142): No user constrained base clocks found in the design. Calling "derive_clocks -period 1.0"
Info (332105): Deriving Clocks
    Info (332105): create_clock -period 1.000 -name CLOCK_50 CLOCK_50
Info: Found TIMEQUEST_REPORT_SCRIPT_INCLUDE_DEFAULT_ANALYSIS = ON
Info: Analyzing Slow Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -2.829
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -2.829       -91.637 CLOCK_50 
Info (332146): Worst-case hold slack is 0.391
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):     0.391         0.000 CLOCK_50 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.380
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.380       -68.380 CLOCK_50 
Info (332001): The selected device family is not supported by the report_metastability command.
Info: Analyzing Fast Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -0.660
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -0.660       -15.430 CLOCK_50 
Info (332146): Worst-case hold slack is 0.215
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):     0.215         0.000 CLOCK_50 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.380
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.380       -68.380 CLOCK_50 
Info (332001): The selected device family is not supported by the report_metastability command.
Info (332102): Design is not fully constrained for setup requirements
Info (332102): Design is not fully constrained for hold requirements
Info: Quartus II 64-Bit TimeQuest Timing Analyzer was successful. 0 errors, 4 warnings
    Info: Peak virtual memory: 4561 megabytes
    Info: Processing ended: Sun Mar 05 13:16:33 2023
    Info: Elapsed time: 00:00:02
    Info: Total CPU time (on all processors): 00:00:01


